{"env_info": "sys.platform: linux\nPython: 3.8.16 (default, Jan 17 2023, 23:13:24) [GCC 11.2.0]\nCUDA available: True\nGPU 0,1,2,3: NVIDIA GeForce RTX 3090\nCUDA_HOME: /data/apps/cuda/11.1\nNVCC: Cuda compilation tools, release 11.1, V11.1.74\nGCC: gcc (GCC) 7.3.0\nPyTorch: 1.10.0+cu111\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v2.2.3 (Git Hash 7336ca9f055cf1bfa13efb658fe15dc9b41f0740)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - LAPACK is enabled (usually provided by MKL)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 11.1\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86\n  - CuDNN 8.0.5\n  - Magma 2.5.2\n  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.1, CUDNN_VERSION=8.0.5, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.10.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, \n\nTorchVision: 0.11.0+cu111\nOpenCV: 4.7.0\nMMCV: 1.7.0\nMMCV Compiler: GCC 7.3\nMMCV CUDA Compiler: 11.1\nMMClassification: 0.25.0+", "seed": 123352744, "mmcls_version": "0.25.0", "config": "model = dict(\n    type='ImageClassifier',\n    backbone=dict(\n        type='ResNet_CIFAR',\n        depth=50,\n        num_stages=4,\n        out_indices=(3, ),\n        style='pytorch'),\n    neck=dict(type='GlobalAveragePooling'),\n    head=dict(\n        type='LinearClsHead',\n        num_classes=10,\n        in_channels=2048,\n        loss=dict(type='CrossEntropyLoss', loss_weight=1.0)))\ndataset_type = 'CIFAR10'\nimg_norm_cfg = dict(\n    mean=[125.307, 122.961, 113.8575],\n    std=[51.5865, 50.847, 51.255],\n    to_rgb=False)\ntrain_pipeline = [\n    dict(type='RandomCrop', size=32, padding=4),\n    dict(type='RandomFlip', flip_prob=0.5, direction='horizontal'),\n    dict(\n        type='Normalize',\n        mean=[125.307, 122.961, 113.8575],\n        std=[51.5865, 50.847, 51.255],\n        to_rgb=False),\n    dict(type='ImageToTensor', keys=['img']),\n    dict(type='ToTensor', keys=['gt_label']),\n    dict(type='Collect', keys=['img', 'gt_label'])\n]\ntest_pipeline = [\n    dict(\n        type='Normalize',\n        mean=[125.307, 122.961, 113.8575],\n        std=[51.5865, 50.847, 51.255],\n        to_rgb=False),\n    dict(type='ImageToTensor', keys=['img']),\n    dict(type='Collect', keys=['img'])\n]\ndata = dict(\n    samples_per_gpu=16,\n    workers_per_gpu=2,\n    train=dict(\n        type='CIFAR10',\n        data_prefix='/HOME/scz0b6e/run/CIFAR-10/CIFAR-10/cifar10/raw',\n        pipeline=[\n            dict(type='RandomCrop', size=32, padding=4),\n            dict(type='RandomFlip', flip_prob=0.5, direction='horizontal'),\n            dict(\n                type='Normalize',\n                mean=[125.307, 122.961, 113.8575],\n                std=[51.5865, 50.847, 51.255],\n                to_rgb=False),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='ToTensor', keys=['gt_label']),\n            dict(type='Collect', keys=['img', 'gt_label'])\n        ]),\n    val=dict(\n        type='CIFAR10',\n        data_prefix='/HOME/scz0b6e/run/CIFAR-10/CIFAR-10/cifar10/raw',\n        pipeline=[\n            dict(\n                type='Normalize',\n                mean=[125.307, 122.961, 113.8575],\n                std=[51.5865, 50.847, 51.255],\n                to_rgb=False),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ],\n        test_mode=True),\n    test=dict(\n        type='CIFAR10',\n        data_prefix='/HOME/scz0b6e/run/CIFAR-10/CIFAR-10/cifar10/raw',\n        pipeline=[\n            dict(\n                type='Normalize',\n                mean=[125.307, 122.961, 113.8575],\n                std=[51.5865, 50.847, 51.255],\n                to_rgb=False),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ],\n        test_mode=True))\noptimizer = dict(type='SGD', lr=0.1, momentum=0.9, weight_decay=0.0001)\noptimizer_config = dict(grad_clip=None)\nlr_config = dict(policy='step', step=[120, 170])\nrunner = dict(type='EpochBasedRunner', max_epochs=10)\ncheckpoint_config = dict(interval=1)\nlog_config = dict(interval=100, hooks=[dict(type='TextLoggerHook')])\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = '/HOME/scz0b6e/run/checkpoints/resnet50_b16x8_cifar10_20210528-f54bfad9.pth'\nresume_from = None\nworkflow = [('train', 1)]\nwork_dir = '/HOME/scz0b6e/run/checkpoints/resnet50_cifar10'\ngpu_ids = range(0, 4)\ndevice = 'cuda'\nseed = 123352744\n", "CLASSES": ["airplane", "automobile", "bird", "cat", "deer", "dog", "frog", "horse", "ship", "truck"]}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 0.1, "memory": 794, "data_time": 0.02347, "loss": 0.71629, "time": 0.07335}
{"mode": "train", "epoch": 1, "iter": 200, "lr": 0.1, "memory": 794, "data_time": 0.00021, "loss": 0.58455, "time": 0.03689}
{"mode": "train", "epoch": 1, "iter": 300, "lr": 0.1, "memory": 794, "data_time": 0.00025, "loss": 0.49367, "time": 0.03701}
{"mode": "train", "epoch": 1, "iter": 400, "lr": 0.1, "memory": 794, "data_time": 0.00024, "loss": 0.45453, "time": 0.03638}
{"mode": "train", "epoch": 1, "iter": 500, "lr": 0.1, "memory": 794, "data_time": 0.00024, "loss": 0.40516, "time": 0.03669}
{"mode": "train", "epoch": 1, "iter": 600, "lr": 0.1, "memory": 794, "data_time": 0.00023, "loss": 0.41709, "time": 0.03682}
{"mode": "train", "epoch": 1, "iter": 700, "lr": 0.1, "memory": 794, "data_time": 0.00021, "loss": 0.38204, "time": 0.03646}
{"mode": "val", "epoch": 1, "iter": 157, "lr": 0.1, "accuracy_top-1": 83.31, "accuracy_top-5": 99.25999}
{"mode": "train", "epoch": 2, "iter": 100, "lr": 0.1, "memory": 794, "data_time": 0.02025, "loss": 0.37191, "time": 0.05704}
{"mode": "train", "epoch": 2, "iter": 200, "lr": 0.1, "memory": 794, "data_time": 0.00024, "loss": 0.33849, "time": 0.03675}
{"mode": "train", "epoch": 2, "iter": 300, "lr": 0.1, "memory": 794, "data_time": 0.0002, "loss": 0.33179, "time": 0.03684}
{"mode": "train", "epoch": 2, "iter": 400, "lr": 0.1, "memory": 794, "data_time": 0.00022, "loss": 0.34518, "time": 0.03659}
{"mode": "train", "epoch": 2, "iter": 500, "lr": 0.1, "memory": 794, "data_time": 0.00018, "loss": 0.35359, "time": 0.03648}
{"mode": "train", "epoch": 2, "iter": 600, "lr": 0.1, "memory": 794, "data_time": 0.00024, "loss": 0.32572, "time": 0.03683}
{"mode": "train", "epoch": 2, "iter": 700, "lr": 0.1, "memory": 794, "data_time": 0.00023, "loss": 0.30943, "time": 0.03646}
{"mode": "val", "epoch": 2, "iter": 157, "lr": 0.1, "accuracy_top-1": 84.29, "accuracy_top-5": 99.34}
{"mode": "train", "epoch": 3, "iter": 100, "lr": 0.1, "memory": 794, "data_time": 0.02023, "loss": 0.28472, "time": 0.05651}
{"mode": "train", "epoch": 3, "iter": 200, "lr": 0.1, "memory": 794, "data_time": 0.00021, "loss": 0.3099, "time": 0.0363}
{"mode": "train", "epoch": 3, "iter": 300, "lr": 0.1, "memory": 794, "data_time": 0.00022, "loss": 0.28901, "time": 0.03659}
{"mode": "train", "epoch": 3, "iter": 400, "lr": 0.1, "memory": 794, "data_time": 0.00023, "loss": 0.28992, "time": 0.03659}
{"mode": "train", "epoch": 3, "iter": 500, "lr": 0.1, "memory": 794, "data_time": 0.00024, "loss": 0.30509, "time": 0.03656}
{"mode": "train", "epoch": 3, "iter": 600, "lr": 0.1, "memory": 794, "data_time": 0.00023, "loss": 0.2953, "time": 0.03667}
{"mode": "train", "epoch": 3, "iter": 700, "lr": 0.1, "memory": 794, "data_time": 0.00025, "loss": 0.28202, "time": 0.03692}
{"mode": "val", "epoch": 3, "iter": 157, "lr": 0.1, "accuracy_top-1": 87.93, "accuracy_top-5": 99.5}
{"mode": "train", "epoch": 4, "iter": 100, "lr": 0.1, "memory": 794, "data_time": 0.02023, "loss": 0.25418, "time": 0.0566}
{"mode": "train", "epoch": 4, "iter": 200, "lr": 0.1, "memory": 794, "data_time": 0.00022, "loss": 0.27424, "time": 0.03641}
{"mode": "train", "epoch": 4, "iter": 300, "lr": 0.1, "memory": 794, "data_time": 0.00021, "loss": 0.28406, "time": 0.03636}
{"mode": "train", "epoch": 4, "iter": 400, "lr": 0.1, "memory": 794, "data_time": 0.00024, "loss": 0.26981, "time": 0.03625}
{"mode": "train", "epoch": 4, "iter": 500, "lr": 0.1, "memory": 794, "data_time": 0.00023, "loss": 0.28601, "time": 0.03634}
{"mode": "train", "epoch": 4, "iter": 600, "lr": 0.1, "memory": 794, "data_time": 0.00025, "loss": 0.28086, "time": 0.03643}
{"mode": "train", "epoch": 4, "iter": 700, "lr": 0.1, "memory": 794, "data_time": 0.00023, "loss": 0.27151, "time": 0.03647}
{"mode": "val", "epoch": 4, "iter": 157, "lr": 0.1, "accuracy_top-1": 89.06, "accuracy_top-5": 99.56}
{"mode": "train", "epoch": 5, "iter": 100, "lr": 0.1, "memory": 794, "data_time": 0.02023, "loss": 0.2573, "time": 0.05686}
{"mode": "train", "epoch": 5, "iter": 200, "lr": 0.1, "memory": 794, "data_time": 0.00026, "loss": 0.25434, "time": 0.03654}
{"mode": "train", "epoch": 5, "iter": 300, "lr": 0.1, "memory": 794, "data_time": 0.00025, "loss": 0.26808, "time": 0.03668}
{"mode": "train", "epoch": 5, "iter": 400, "lr": 0.1, "memory": 794, "data_time": 0.00022, "loss": 0.25771, "time": 0.03647}
{"mode": "train", "epoch": 5, "iter": 500, "lr": 0.1, "memory": 794, "data_time": 0.00022, "loss": 0.26714, "time": 0.03639}
{"mode": "train", "epoch": 5, "iter": 600, "lr": 0.1, "memory": 794, "data_time": 0.00024, "loss": 0.28416, "time": 0.03645}
{"mode": "train", "epoch": 5, "iter": 700, "lr": 0.1, "memory": 794, "data_time": 0.00024, "loss": 0.2512, "time": 0.03666}
{"mode": "val", "epoch": 5, "iter": 157, "lr": 0.1, "accuracy_top-1": 87.6, "accuracy_top-5": 99.48}
{"mode": "train", "epoch": 6, "iter": 100, "lr": 0.1, "memory": 794, "data_time": 0.02022, "loss": 0.24021, "time": 0.05668}
{"mode": "train", "epoch": 6, "iter": 200, "lr": 0.1, "memory": 794, "data_time": 0.00023, "loss": 0.26677, "time": 0.03667}
{"mode": "train", "epoch": 6, "iter": 300, "lr": 0.1, "memory": 794, "data_time": 0.00022, "loss": 0.25454, "time": 0.03657}
{"mode": "train", "epoch": 6, "iter": 400, "lr": 0.1, "memory": 794, "data_time": 0.00022, "loss": 0.25975, "time": 0.03652}
{"mode": "train", "epoch": 6, "iter": 500, "lr": 0.1, "memory": 794, "data_time": 0.00024, "loss": 0.24443, "time": 0.03661}
{"mode": "train", "epoch": 6, "iter": 600, "lr": 0.1, "memory": 794, "data_time": 0.00022, "loss": 0.24874, "time": 0.03645}
{"mode": "train", "epoch": 6, "iter": 700, "lr": 0.1, "memory": 794, "data_time": 0.00023, "loss": 0.26472, "time": 0.03629}
{"mode": "val", "epoch": 6, "iter": 157, "lr": 0.1, "accuracy_top-1": 84.79, "accuracy_top-5": 99.41}
{"mode": "train", "epoch": 7, "iter": 100, "lr": 0.1, "memory": 794, "data_time": 0.02022, "loss": 0.23968, "time": 0.05662}
{"mode": "train", "epoch": 7, "iter": 200, "lr": 0.1, "memory": 794, "data_time": 0.00022, "loss": 0.24431, "time": 0.0366}
{"mode": "train", "epoch": 7, "iter": 300, "lr": 0.1, "memory": 794, "data_time": 0.00024, "loss": 0.2388, "time": 0.03666}
{"mode": "train", "epoch": 7, "iter": 400, "lr": 0.1, "memory": 794, "data_time": 0.00023, "loss": 0.23532, "time": 0.03631}
{"mode": "train", "epoch": 7, "iter": 500, "lr": 0.1, "memory": 794, "data_time": 0.00023, "loss": 0.21674, "time": 0.03662}
{"mode": "train", "epoch": 7, "iter": 600, "lr": 0.1, "memory": 794, "data_time": 0.00024, "loss": 0.24856, "time": 0.0364}
{"mode": "train", "epoch": 7, "iter": 700, "lr": 0.1, "memory": 794, "data_time": 0.00023, "loss": 0.26044, "time": 0.03636}
{"mode": "val", "epoch": 7, "iter": 157, "lr": 0.1, "accuracy_top-1": 86.98, "accuracy_top-5": 99.18999}
{"mode": "train", "epoch": 8, "iter": 100, "lr": 0.1, "memory": 794, "data_time": 0.02024, "loss": 0.24376, "time": 0.05691}
{"mode": "train", "epoch": 8, "iter": 200, "lr": 0.1, "memory": 794, "data_time": 0.00023, "loss": 0.22493, "time": 0.03693}
{"mode": "train", "epoch": 8, "iter": 300, "lr": 0.1, "memory": 794, "data_time": 0.00021, "loss": 0.23625, "time": 0.0366}
{"mode": "train", "epoch": 8, "iter": 400, "lr": 0.1, "memory": 794, "data_time": 0.0002, "loss": 0.24577, "time": 0.03651}
{"mode": "train", "epoch": 8, "iter": 500, "lr": 0.1, "memory": 794, "data_time": 0.00023, "loss": 0.23377, "time": 0.03646}
{"mode": "train", "epoch": 8, "iter": 600, "lr": 0.1, "memory": 794, "data_time": 0.00022, "loss": 0.25359, "time": 0.0365}
{"mode": "train", "epoch": 8, "iter": 700, "lr": 0.1, "memory": 794, "data_time": 0.00022, "loss": 0.22966, "time": 0.03635}
{"mode": "val", "epoch": 8, "iter": 157, "lr": 0.1, "accuracy_top-1": 90.02, "accuracy_top-5": 99.7}
{"mode": "train", "epoch": 9, "iter": 100, "lr": 0.1, "memory": 794, "data_time": 0.0202, "loss": 0.21426, "time": 0.0567}
{"mode": "train", "epoch": 9, "iter": 200, "lr": 0.1, "memory": 794, "data_time": 0.00023, "loss": 0.23658, "time": 0.03657}
{"mode": "train", "epoch": 9, "iter": 300, "lr": 0.1, "memory": 794, "data_time": 0.00023, "loss": 0.23111, "time": 0.03647}
{"mode": "train", "epoch": 9, "iter": 400, "lr": 0.1, "memory": 794, "data_time": 0.00022, "loss": 0.237, "time": 0.03644}
{"mode": "train", "epoch": 9, "iter": 500, "lr": 0.1, "memory": 794, "data_time": 0.00022, "loss": 0.23266, "time": 0.03642}
{"mode": "train", "epoch": 9, "iter": 600, "lr": 0.1, "memory": 794, "data_time": 0.00023, "loss": 0.21242, "time": 0.03634}
{"mode": "train", "epoch": 9, "iter": 700, "lr": 0.1, "memory": 794, "data_time": 0.00023, "loss": 0.24938, "time": 0.03646}
{"mode": "val", "epoch": 9, "iter": 157, "lr": 0.1, "accuracy_top-1": 89.31, "accuracy_top-5": 99.59}
{"mode": "train", "epoch": 10, "iter": 100, "lr": 0.1, "memory": 794, "data_time": 0.0202, "loss": 0.22676, "time": 0.05656}
{"mode": "train", "epoch": 10, "iter": 200, "lr": 0.1, "memory": 794, "data_time": 0.00022, "loss": 0.22575, "time": 0.03647}
{"mode": "train", "epoch": 10, "iter": 300, "lr": 0.1, "memory": 794, "data_time": 0.00022, "loss": 0.22019, "time": 0.03645}
{"mode": "train", "epoch": 10, "iter": 400, "lr": 0.1, "memory": 794, "data_time": 0.00022, "loss": 0.2191, "time": 0.03641}
{"mode": "train", "epoch": 10, "iter": 500, "lr": 0.1, "memory": 794, "data_time": 0.00021, "loss": 0.22466, "time": 0.03647}
{"mode": "train", "epoch": 10, "iter": 600, "lr": 0.1, "memory": 794, "data_time": 0.00021, "loss": 0.2457, "time": 0.03638}
{"mode": "train", "epoch": 10, "iter": 700, "lr": 0.1, "memory": 794, "data_time": 0.00022, "loss": 0.22724, "time": 0.03643}
{"mode": "val", "epoch": 10, "iter": 157, "lr": 0.1, "accuracy_top-1": 87.65, "accuracy_top-5": 99.57}
